generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") // Ensure this is set in your .env file
}

model user {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId // Use auto() for MongoDB ObjectID
  name             String
  image            String?
  email            String?   @unique
  emailverified    DateTime?
  hashedPassword    String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  favoriteIds      Int       // Consider changing this to a list if it can hold multiple IDs
  sessions         session[]  // One-to-many relationship
  accounts         account[]  // One-to-many relationship
}

model account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId// Use auto() for MongoDB ObjectID
  userID             String  @db.ObjectId   // Change to String to match user ID type
  type               String
  provider           String 
  providerAccountID  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at        Int?
  token_type        String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user               user     @relation(fields: [userID], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountID]) // Unique constraint on provider and providerAccountID
}

model session {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId// Use auto() for MongoDB ObjectID
  sessionToken  String   @unique
  userID        String  @db.ObjectId // Change to String to match user ID type
  expires       DateTime

  user          user     @relation(fields: [userID], references: [id], onDelete: Cascade)
}

model verificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId // Use auto() for MongoDB ObjectID
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token]) // Unique constraint on identifier and token
}

model movie {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId// Use auto() for MongoDB ObjectID
  title       String
  description String
  videoUrl    String
  thumbnailUrl String
  genre       String
  duration    String
}